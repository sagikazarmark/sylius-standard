version: '2'

services:
    app:
        image: debian:jessie
        volumes:
            - .:/var/www
        tty: true

    frontend:
        build: etc/docker/frontend
        volumes_from:
            - app
        environment:
            NPM_CONFIG_PREFIX: /var/www/var/docker/npm/prefix
            NPM_CONFIG_CACHE: /var/www/var/docker/npm/cache

    db:
        image: mysql:latest
        ports:
            - 3306
        volumes:
            - ./var/docker/mysql:/var/lib/mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            MYSQL_ROOT_PASSWORD: ''
            MYSQL_DATABASE: symfony
            MYSQL_USER: symfony
            MYSQL_PASSWORD: symfony

    php:
        build: etc/docker/php-fpm
        ports:
            - 9000
        volumes_from:
            - app
        links:
            - db
            - blackfire
        environment:
            HISTFILE: /var/www/var/docker/.bash_history
            XDG_CONFIG_HOME: /var/www/var/docker/.config # Required for PsySH
            COMPOSER_HOME: /var/www/var/docker/composer

    web:
        build: etc/docker/nginx
        ports:
            - 80
        links:
            - php:php-fpm
        volumes_from:
            - app
        volumes:
            - ./var/docker/nginx:/var/log/nginx

    php_debug:
        build:
            context: etc/docker/php-fpm
            args:
               USE_XDEBUG: "yes"
        ports:
            - 9000
            - 9090
        volumes_from:
            - app
        links:
            - db
            - blackfire
        environment:
            HISTFILE: /var/www/var/docker/.bash_history
            XDEBUG_CONFIG: idekey=PHPSTORM
            XDG_CONFIG_HOME: /var/www/var/docker/.config # Required for PsySH
            COMPOSER_HOME: /var/www/var/docker/composer

    web_debug:
        build: etc/docker/nginx
        ports:
            - 80
        links:
            - php_debug:php-fpm
        volumes_from:
            - app
        volumes:
            - ./var/docker/nginx:/var/log/nginx

    # Set your blackfire IDs and tokens as environment variables
    # on your system before building the containers.
    # You can find your IDs and tokens in your account profile
    # https://blackfire.io/account or on the blackfire docker
    # integration page: https://blackfire.io/docs/integrations/docker
    blackfire:
        image: blackfire/blackfire
        env_file:
            - ./etc/docker/env/blackfire.env

    elasticsearch:
        image: elasticsearch
        command: elasticsearch -Des.network.host=0.0.0.0
        expose:
            - 9200

    kibana:
        image: kibana
        ports:
            - 5601
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        links:
            - elasticsearch

    logstash:
        build: etc/docker/logstash
        command: logstash -f /etc/logstash/logstash.conf
        links:
            - elasticsearch
        volumes_from:
            - app
            - web
